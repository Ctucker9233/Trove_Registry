{"version":3,"sources":["images/Donut-Chest.gif","images/pngIcons/049-island.png","images/pngIcons/046-treasureChest.png","images/pngIcons/029-pirate.png","images/pngIcons/001-compass.png","images/Banners/Banner1.png","images/Logos/NoFriendsDefault.png","images/Logos/TrovePageDefault.png","utils/themeUtil.js","utils/Auth.js","pages/LogoutFunction.jsx","components/BrandLogo/index.js","components/Nav/index.js","components/LoginForm/index.js","utils/API.js","pages/LogInPage.js","components/Main/index.js","pages/LandingPage.js","components/SignUpForm/index.js","pages/SignupPage.js","components/EditProfileBtn/index.js","components/SaveBtn/index.js","components/Profile/index.js","components/SideBar/index.js","components/SearchBar/index.js","components/Avatar/index.js","components/ProfileBanner/index.js","pages/ProfilePage.js","components/AddItemBtn/index.js","components/AddTroveItemDialogModal/index.js","components/DiscoverItemCard/index.js","pages/DiscoverPage.js","components/NewFriendsDialogModal/index.js","components/NoFriends/index.js","components/FriendTable/index.js","pages/MyFriendsPage.js","components/EditTroveForm/index.js","components/EditTroveBtn/index.js","components/EditTroveDialogModal/index.js","components/ItemForm/index.js","components/AddItemDialogModal/index.js","components/DeleteBtn/index.js","components/DeleteTroveDialogModal/index.js","components/ShowItemsBtn/index.js","components/DeleteItemDialogModal/index.js","components/ItemCard/index.js","components/ItemDialogModal/index.js","components/TroveCard/index.js","components/NoTrove/index.js","components/MyTrove/index.js","components/TroveForm/index.js","components/NewTroveDialogModal/index.js","pages/TrovePage.js","App.js","registerServiceWorker.js","index.js","images/Logos/TroveLogo.png"],"names":["module","exports","__webpack_require__","p","theme","createMuiTheme","palette","primary","light","main","dark","secondary","typography","fontFamily","h1","fontStyle","h2","h3","h4","h5","h6","overrides","MuiButton","root","borderRadius","Auth","token","localStorage","setItem","getItem","removeItem","LogoutFunction","props","deauthenticateUser","history","push","react_default","a","createElement","react","useStyles","makeStyles","logo","width","height","BrandLogo","classes","className","src","alt","display","appBar","zIndex","drawer","toolbarRoot","justifyContent","Nav","CssBaseline","AppBar","position","Toolbar","components_BrandLogo","react_router_dom","to","Button","color","alignItemsAndJustifyContent","alignItems","border","boxShadow","backgroundColor","LoginForm","_ref","successMessage","errors","onSubmit","onChange","user","console","log","Card","clsx","action","summary","TextField","placeholder","name","error","username","helperText","value","type","password","label","CardContent","API","login","userData","axios","post","signUp","dashboard","get","headers","Authorization","concat","findFriends","search","getTrove","addTrove","troveData","body","editTrove","troveId","put","deleteTrove","userid","delete","getFriends","addFriend","id","friend","updateUser","addItem","Item","getItems","itemId","addTroveItem","troveTitle","LoginPage","_useState","useState","_useState2","Object","slicedToArray","setErrors","_useState3","_useState4","setSuccessMessage","_useState5","_useState6","setUser","useEffect","storedMessage","Grid","components_Nav","components_LoginForm","event","preventDefault","then","res","authenticateUser","data","checkAuthenticateStatus","catch","err","message","e","objectSpread","defineProperty","target","content","flexGrow","layout","marginTop","Main","children","centerGraphics","alignContent","verticalAlign","textAlign","background","backgroundImage","donutGIF","container","opacity","padding","left","top","transform","LandingPage","components_Main","Paper","spacing","item","xs","direction","Container","animatedLogo","variant","href","SignUpForm","email","SignUpPage","components_SignUpForm","response","& > *","margin","extendedIcon","marginRight","EditProfileBtn","button","onClick","Edit_default","SaveProfileBtn","startIcon","maxWidth","userInfo","flexDirection","Profile","editable","setEditable","_useState7","_useState8","setUsername","_useState9","_useState10","setPassword","_useState11","_useState12","setName","_useState13","_useState14","readonly","setReadonly","components_EditProfileBtn","noValidate","autoComplete","justify","md","readOnly","fullWidth","InputLabelProps","shrink","rows","multiline","SaveBtn","flexShrink","drawerPaper","toolbar","mixins","icon","SideBar","Drawer","paper","List","ListItem","key","ListItemIcon","island","Typography","Divider","treasureChest","pirate","compass","shape","marginLeft","breakpoints","up","searchIcon","pointerEvents","inputRoot","inputInput","transition","transitions","create","SearchBar","Search_default","InputBase","input","inputProps","aria-label","onSearch","small","large","teal","AvatarImage","Avatar","overflow","bannerImg","backgroundRepeat","ProfileBanner","banner","ProfilePage","setSecretData","getToken","sm","components_SideBar","components_ProfileBanner","components_Profile","AddItemBtn","IconButton","size","AddCircle_default","fontSize","avatar","blue","AddTroveItemDialog","onClose","open","onItemChange","createItem","newItem","Dialog","aria-labelledby","DialogTitle","FormControl","formControl","InputLabel","htmlFor","Select","native","trove","troves","map","t","title","AddTroveItemDialogModal","setOpen","components_AddItemBtn","setItemId","_id","media","paddingTop","backgroundSize","expand","duration","shortest","expandOpen","red","DiscoverItemCard","CardHeader","imagesrc","component","url","description","price","CardActions","disableSpacing","DiscoverPage","items","setItems","setTrove","setTroveTitle","components_DiscoverItemCard","NewFriendsDialog","selectedValue","result","setResult","setSearch","parentNode","setFriends","friends","components_SearchBar","person","NewFriendsDialogModal","image","NoFriends","NoFriendsImg","table","minWidth","HeaderDiv","marginBottom","BodyDiv","noFriendsStyle","modalButton","FriendTable","elevation","span","searchResult","length","TableContainer","Table","TableBody","TableRow","TableCell","align","components_NoFriends","MyFriendsPage","setSearchResult","components_FriendTable","EditTroveForm","Edit","newTrove","imgurl","EditTroveBtn","EditTroveDialog","components_EditTroveForm","EditTroveDialogModal","components_EditTroveBtn","setTroveId","ItemForm","AddItemDialog","components_ItemForm","AddItemDialogModal","setNewItem","DeleteBtn","Delete_default","DeleteTroveDialog","onDelete","DeleteTroveDialogModal","components_DeleteBtn","ShowItemsBtn","Visibility_default","DeleteItemDialog","onItemDelete","ItemCard","DeleteItemDialogModal_DeleteTroveDialogModal","ItemDialog","components_ItemCard","components_ShowItemsBtn","TroveCard","ItemDialogModal_AddItemDialogModal","bodyDiv","NoTrove","NoTroveImg","MyTrove","components_TroveCard","components_NoTrove","TroveForm","onAdd","TroveDialog","components_TroveForm","NewTroveDialogModal","_React$useState","React","_React$useState2","TrovePage","setNewTrove","components_MyTrove","App","authenticated","Authenticate","setAuthenticate","toggleAuthenticateStatus","isUserAuthenticated","ThemeProvider","react_router","exact","path","render","pages_LandingPage","assign","LogInPage","SignupPage","pages_ProfilePage","pages_TrovePage","FriendsPage","pages_LogoutFunction","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","ReactDom","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.991c51ca.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Donut-Chest.39ff582d.gif\";","module.exports = __webpack_public_path__ + \"static/media/049-island.805f3263.png\";","module.exports = __webpack_public_path__ + \"static/media/046-treasureChest.3980003d.png\";","module.exports = __webpack_public_path__ + \"static/media/029-pirate.8c7db220.png\";","module.exports = __webpack_public_path__ + \"static/media/001-compass.482c367e.png\";","module.exports = __webpack_public_path__ + \"static/media/Banner1.aba6bcec.png\";","module.exports = __webpack_public_path__ + \"static/media/NoFriendsDefault.bba6aa66.png\";","module.exports = __webpack_public_path__ + \"static/media/TrovePageDefault.9f2569fa.png\";","import { createMuiTheme } from '@material-ui/core';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            light: '#00d2b4',\n            main: '#c93146',\n            dark: '#FC6C4D'\n        },\n        secondary: {\n            light: '#a8f4e6',\n            main: '#00d2b4',\n            dark: '#1a8a98',\n        },\n    },\n    typography: {\n        fontFamily: 'Montserrat, Helvetica, Sans-Serif',\n        h1: {\n            fontFamily: 'Lato, Lucida-Grande, Tahoma, Sans-Serif', fontStyle: 'italic'\n        },\n        h2: 'Lato Lucida-Grande, Tahoma, Sans-Serif',\n        h3: 'Lato Lucida-Grande, Tahoma, Sans-Serif',\n        h4: 'Lato Lucida-Grande, Tahoma, Sans-Serif',\n        h5: 'Lato Lucida-Grande, Tahoma, Sans-Serif',\n        h6: 'Lato Lucida-Grande, Tahoma, Sans-Serif',\n    },\n    overrides: { //override a specific feature of the component we name below\n        MuiButton: {\n            root: {\n                borderRadius: '25px'\n            }\n        }\n    }\n});\n\nexport default theme\n","class Auth {\n\n  /**\n   * Authenticate a user. Save a token string in Local Storage\n   *\n   * @param {string} token\n   */\n  static authenticateUser(token) {\n    localStorage.setItem('token', token);\n  }\n\n  /**\n   * Check if a user is authenticated - check if a token is saved in Local Storage\n   *\n   * @returns {boolean}\n   */\n  static isUserAuthenticated() {\n    return localStorage.getItem('token') !== null;\n  }\n\n  /**\n   * Deauthenticate a user. Remove a token from Local Storage.\n   *\n   */\n  static deauthenticateUser() {\n    localStorage.removeItem('token');\n  }\n\n  /**\n   * Get a token value.\n   *\n   * @returns {string}\n   */\n\n  static getToken() {\n    return localStorage.getItem('token');\n  }\n\n}\n\nexport default Auth;\n","import React, { Fragment } from 'react';\nimport Auth from '../utils/Auth';\n\n\nconst LogoutFunction = (props) => {\n\n    Auth.deauthenticateUser();\n    // change the current URL to / after logout\n    props.history.push('/');\n\n    return (\n      <Fragment>\n        <p>Logging out...</p>\n      </Fragment>\n    )\n\n}\n\nexport default LogoutFunction;\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport logo from \"../../images/Logos/TroveLogo.png\";\n\nconst useStyles = makeStyles(theme => ({\n    logo: {\n        width: '100px',\n        height: '50px'\n    },\n}));\n\nconst BrandLogo = () => {\n    const classes = useStyles()\n    \n    return(\n        <img className={ classes.logo } src={logo} alt=\"Trove\"/>\n    )\n \n}\n\nexport default BrandLogo;","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Button from '@material-ui/core/Button'\nimport Toolbar from '@material-ui/core/Toolbar';\nimport BrandLogo from '../BrandLogo/index';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'inline-block',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n\n    },\n    toolbarRoot: {\n        justifyContent: 'space-between',\n    },\n}));\n\nconst Nav = (props) => {\n    const classes = useStyles();\n\n    return (\n        <Fragment>\n            <CssBaseline />\n            <AppBar position=\"fixed\" className={classes.appBar}>\n                <Toolbar classes={{ root: classes.toolbarRoot }}>\n                    <BrandLogo />\n                    <Link to=\"/logout\"><Button color=\"inherit\" >Logout</Button></Link>\n                </Toolbar>\n            </AppBar>\n        </Fragment>\n    );\n}\n\nexport default Nav;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, CardContent } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx'\n\nconst useStyles = makeStyles(theme => ({\n\n  alignItemsAndJustifyContent: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    border: '0',\n    boxShadow: 'none'\n  },\n  root: {\n    backgroundColor: \"white\", \n    color: 'white'\n  }\n}));\n\nconst LoginForm = ({successMessage, errors, onSubmit, onChange, user}) => {\n  console.log(successMessage)\n  const classes = useStyles();\n\n  return (\n  \n  <Card className={clsx(classes.alignItemsAndJustifyContent, classes.root)}>\n    <form action=\"/\" onSubmit={onSubmit}>\n      <h2 className=\"card-heading\">Login</h2>\n\n      {successMessage && <p className=\"success-message\">{successMessage}</p>}\n      {errors.summary && <p className=\"error-message\">{errors.summary}</p>}\n\n      <div className=\"field-line\">\n        <TextField\n          placeholder=\"Username\"\n          name=\"username\"\n          error={user.username === \"\"}\n          helperText={user.username === \"\" ? errors.username : ' '}\n          onChange={onChange}\n          value={user.username}\n        />\n      </div>\n\n      <div className=\"field-line\">\n        <TextField\n          placeholder=\"Password\"\n          type=\"password\"\n          name=\"password\"\n          onChange={onChange}\n          error={user.password === \"\"}\n          helperText={user.password === \"\" ? errors.name : ' '}\n          value={user.password}\n        />\n      </div>\n\n      <div className=\"button-line\">\n        <Button type=\"submit\" label=\"Log in\" primary=\"true\" >Login</Button>\n      </div>\n\n      <CardContent >Don't have an account? <Link to={'/signup'}>Create one</Link>.</CardContent>\n    </form>\n  </Card>\n)};\n\nexport default LoginForm;","import axios from \"axios\";\n\n//methods for interacting with API Auth routes\nexport default {\n   login: userData =>\n      axios.post(\"/auth/login\", userData),\n   signUp: userData =>\n      axios.post('/auth/signup', userData),\n   dashboard: token =>\n      axios.get('/api/profile', { headers: { Authorization: `bearer ${token}` } }),\n   findFriends: (search, token) => {\n      return axios.get('/api/search/friends/' + search, { headers: { Authorization: `bearer ${token}` } })\n   },\n   getTrove: (userData, token) => {\n      console.log(\"Big API\", userData)\n      return axios.get('/api/user/trove/' + userData, { headers: { Authorization: `bearer ${token}` } })\n   },\n   addTrove: (userData, troveData) => {\n      return axios.post(\"/auth/trove/\" + userData, { body: troveData })\n   },\n   editTrove: (troveId, troveData) => {\n      return axios.put(\"/auth/trove/\" + troveId, { body: troveData })\n   },\n   deleteTrove: (troveId, userid) => {\n      console.log(troveId, userid)\n      return axios.delete(\"/auth/trove/\" + troveId + \"/\" + userid)\n   },\n   getFriends: (userData, token) =>\n      axios.get('/api/friends/' + userData, { headers: { Authorization: `bearer ${token}` } }),\n   addFriend: (userData) => {\n      return axios.put(\"/auth/friends/\" + userData.id + \"/\" + userData.friend)\n   },\n   updateUser: (userData, token) => {\n      return axios.put('/auth/profile' + userData, { headers: { Authorization: `bearer ${token}` }, body: userData })\n   },\n   addItem: (troveId, Item) => {\n      console.log(troveId, Item);\n      return axios.post('/auth/trove/item/'+ troveId, {body: Item} )\n   },\n   getItems: (token) => {\n      return axios.get('/auth/items/', { headers: { Authorization: `bearer ${token}` } })\n   },\n   removeItem: (troveId, itemId) => {\n      return axios.delete(\"/auth/trove/item/\" + troveId + \"/\" + itemId)\n   },\n   addTroveItem: (troveTitle, itemId) => {\n      return axios.put('/auth/trove/item/'+ itemId, {troveTitle})\n   }\n}","import React, { useState, useEffect, Fragment } from 'react';\nimport Auth from '../utils/Auth';\nimport Nav from '../components/Nav';\nimport Grid from '@material-ui/core/Grid';\nimport LoginForm from '../components/LoginForm';\nimport API from '../utils/API';\n\nconst LoginPage = (props) => {\n\n  // set the initial component state\n\n  const [errors, setErrors] = useState({});\n  const [successMessage, setSuccessMessage] = useState('');\n  const [user, setUser] = useState({\n    username: '',\n    password: ''\n  })\n\n\n  useEffect(() => {\n    const storedMessage = localStorage.getItem('successMessage');\n    let successMessage = '';\n\n    if (storedMessage) {\n      successMessage = storedMessage;\n      localStorage.removeItem('successMessage');\n    }\n\n    setSuccessMessage(successMessage);\n    console.log(successMessage)\n\n  }, [])\n\n  /**\n   * Process the form.\n   *\n   * @param {object} event - the JavaScript event object\n   */\n  const processForm = event => {\n    // prevent default action. in this case, action is the form submission event\n    event.preventDefault();\n\n    // create a string for an HTTP body message\n\n    const { username, password } = user;\n\n    API.login({ username, password }).then(res => {\n      console.log(res)\n\n      // save the token\n      Auth.authenticateUser(res.data.token);\n\n      // update authenticated state\n      props.checkAuthenticateStatus();\n\n      // redirect signed in user to dashboard\n      props.history.push('/profile');\n\n    }).catch((err) => {\n      console.log(err)\n\n      const errors = err.data.errors ? err.data.errors : {};\n      errors.summary = err.data.message;\n\n      setErrors(\n        errors\n      );\n    });\n  }\n\n  useEffect(() => {\n    return () => {\n      setErrors({\n        errors: {}\n      })\n    }\n  }, [])\n\n  /**\n   * Change the user object.\n   *\n   * @param {object} event - the JavaScript event object\n   */\n  const changeUser = (e) => setUser({\n    ...user,\n    [e.target.name]: e.target.value,\n  });\n\n  /**\n   * Render the component.\n   */\n\n  return (\n    <Fragment>\n      <Grid>\n\n        <Nav />\n        <br></br>\n\n\n        <LoginForm\n          onSubmit={processForm}\n          onChange={changeUser}\n          errors={errors}\n          successMessage={successMessage}\n          user={user}\n        />\n      </Grid>\n    </Fragment>\n  );\n}\n\nexport default LoginPage;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles(theme => ({\n    content: {\n        flexGrow: 1,\n        layout: {\n            marginTop:'100px',\n        }\n    },\n}));\n\nconst Main = ({ children }) => {\n    const classes = useStyles();\n\n    return (\n        <main className={classes.content}>\n            {children}\n        </main>\n    )\n}\n\nexport default Main;","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport Main from '../components/Main'\nimport Paper from '@material-ui/core/Paper'\nimport Container from '@material-ui/core/Container'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid'\n\nimport animatedLogo from '../images/Logos/TroveLogo.png'\nimport donutGIF from '../images/Donut-Chest.gif'\n\nconst useStyles = makeStyles(theme => ({\n    centerGraphics: {\n        alignContent: \"center\",\n        verticalAlign: 'middle',\n        textAlign: 'center'\n    },\n    background: {\n        backgroundImage: `url(${donutGIF})`,\n        height: '100vh'\n    },\n    container: {\n        backgroundColor: 'white',\n        opacity: '90%',\n        width: '50vh',\n        padding: '30px',\n        position: 'absolute', \n        left: '50%', \n        top: '50%',\n        transform: 'translate(-50%, -50%)'\n    }\n\n}));\n\nconst LandingPage = (props) => {\n    const classes = useStyles();\n    console.log(props)\n    return (\n\n        <Main >\n            <Paper className={classes.background}>\n                <div className={classes.centerGraphics}>\n                    <Grid container spacing={3}>\n                        <Grid item xs={2} direction='row'>\n                        </Grid>\n                        <Grid item xs={8} direction='row'>\n                            <Container className={classes.container}>\n                                <img src={animatedLogo} alt=\"Trove Logo\" width=\"350px\" />\n                                <br></br>\n                                <br></br>\n                                <Button variant='contained' color='primary' href=\"/signup\">Sign Up</Button>\n                                <Button variant='contained' color='primary' href=\"/login\">Login</Button>\n                                <br></br>\n                                <br></br>\n                            </Container>\n\n\n                        </Grid>\n                        <Grid item xs={2} direction='row'></Grid>\n                    </Grid>\n                </div>\n\n\n\n            </Paper>\n\n        </Main >\n\n    )\n}\n\nexport default LandingPage;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, CardContent } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\n\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx'\n\nconst useStyles = makeStyles(theme => ({\n\n  alignItemsAndJustifyContent: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    border: '0',\n    boxShadow: 'none'\n  },\n  root: {\n    backgroundColor: \"white\", \n    color: 'white'\n  }\n}));\n\nconst SignUpForm = ({errors, user, onChange, onSubmit}) =>{\nconsole.log(user)\nconst classes = useStyles();\n\nreturn(\n  <Card className={clsx(classes.alignItemsAndJustifyContent, classes.root)}>\n    <form action=\"/\" onSubmit={onSubmit}>\n      <h2 className=\"card-heading\">Sign Up</h2>\n      {console.log(errors.summary)}\n      {errors.summary && <p className=\"error-message\">{errors.summary}</p>}\n\n      <div className=\"field-line\">\n        <TextField\n          label=\"Username\"\n          type=\"text\"\n          name=\"username\"\n          error={user.username === \"\"}\n          helperText={user.username === \"\" ? errors.username : ' '}\n          onChange={onChange}\n          value={user.username}\n        />\n      </div>\n\n      <div className=\"field-line\">\n        <TextField\n        type=\"text\"\n          label=\"Name\"\n          name=\"name\"\n          error={user.name === \"\"}\n          helperText={user.name === \"\" ? errors.name : ' '}\n          onChange={onChange}\n          value={user.name}\n        />\n      </div>\n\n      <div className=\"field-line\">\n        <TextField\n        type=\"text\"\n          label=\"Email\"\n          name=\"email\"\n          error={user.email === \"\"}\n          helperText={user.email === \"\" ? errors.email : ' '}\n          onChange={onChange}\n          value={user.email}\n        />\n      </div>\n\n      <div className=\"field-line\">\n        <TextField\n        \n          label=\"Password\"\n          type=\"password\"\n          name=\"password\"\n          onChange={onChange}\n          error={user.password === \"\"}\n          helperText={user.password === \"\" ? errors.name : ' '}\n          value={user.password}\n        />\n      </div>\n\n      <div className=\"button-line\">\n        <Button variant=\"outlined\" type=\"submit\" label=\"Create New Account\" primary=\"true\">Create User</Button>\n      </div>\n\n      <CardContent>Already have an account? <Link to={'/login'}>Log in</Link></CardContent>\n    </form>\n  </Card>\n)};\n\nexport default SignUpForm;\n","import React, { useEffect, useState, Fragment } from 'react';\nimport SignUpForm from '../components/SignUpForm';\nimport API from '../utils/API';\nimport Nav from '../components/Nav';\nimport Grid from '@material-ui/core/Grid';\n\nconst SignUpPage = (props) => {\n  // set the initial component state\n  const [errors, setErrors] = useState({});\n  const [user, setUser] = useState({\n    username: '',\n    name: '',\n    email: '',\n    password: ''\n  })\n\n  /**\n   * Process the form.\n   *\n   * @param {object} event - the JavaScript event object\n   */\n\n  const processForm = (event) => {\n    // prevent default action. in this case, action is the form submission event\n    event.preventDefault();\n\n    // create a string for an HTTP body message\n    const { username, name, email, password } = user;\n\n    //const formData = `email=${email}&password=${password}`;\n    API.signUp({ username, name, email, password }).then(res => {\n      // change the component-container state\n      // set a message\n      localStorage.setItem('successMessage', res.data.message);\n\n      // redirect user after sign up to login page\n      props.history.push('/login');\n      setErrors({\n        errors: {},\n      });\n\n    }).catch(({ response }) => {\n      console.log(response)\n      const errors = response.data.errors ? response.data.errors : {};\n      errors.summary = response.data.message;\n\n      setErrors(\n        errors\n      );\n    });\n  }\n\n  useEffect(() => {\n    return () => {\n      setErrors({\n        errors: {}\n      })\n    }\n  }, [])\n\n  /**\n   * Change the user object.\n   *\n   * @param {object} event - the JavaScript event object\n   */\n  const changeUser = (e) => setUser(\n    {\n    ...user,\n    \n    [e.target.name]: e.target.value,\n  });\n\n  /**\n   * Render the component.\n   */\n\n  return (\n    <Fragment>\n<Grid>\n   <Nav />\n    <SignUpForm\n      onSubmit={processForm}\n      onChange={changeUser}\n      errors={errors}\n      user={user}\n    /> \n    </Grid>\n     </Fragment>\n  );\n\n\n}\n\nexport default SignUpPage;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport EditIcon from '@material-ui/icons/Edit';\nconst useStyles = makeStyles(theme => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1),\n    },\n}));\nconst EditProfileBtn = (props) => {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}\n                onClick={props.onClick}\n                id={props.id}\n            >\n                <EditIcon />\n            </Button>\n        </div>\n    );\n}\nexport default EditProfileBtn","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport SaveIcon from '@material-ui/icons/Edit';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\nconst SaveProfileBtn = () => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Button\n                variant=\"contained\"\n                color=\"Primary\"\n                className={classes.button}\n                startIcon={<SaveIcon />}\n            >\n                Save\n      </Button>\n        </div>\n    );\n}\n\nexport default SaveProfileBtn\n\n","import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid'\nimport { maxWidth } from '@material-ui/system';\nimport EditProfileBtn from '../EditProfileBtn';\nimport SaveProfileBtn from '../SaveBtn'\nimport { set } from 'mongoose';\nimport API from '../../utils/API'\n\nconst useStyles = makeStyles(theme => ({\n  background: {\n    backgroundColor: theme.palette.secondary.light,\n    borderRadius: '10px',\n    margin: '50px auto',\n    maxWidth: '800px',\n    padding: '20px'\n  },\n  userInfo: {\n    borderRadius: '10px',\n    margin: '10px auto'\n  },\n  display: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  }\n}));\n\nconst Profile = (props) => {\n  const classes = useStyles();\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n  const [value, setValue] = useState('Controlled');\n  const [editable, setEditable] = useState(false);\n  const [hidden, setHidden] = useState(true);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n  const [readonly, setReadonly] = useState(true);\n\n  const handleSave = event => {\n    setEditable(false)\n    API.updateUser(username, password, name)\n\n  }\n\n  const handleEdit = () => {\n    setEditable(true)\n    setReadonly(false)\n  }\n\n  const onChange = (e) => {\n    props.setUser({\n      ...props.user,\n      [e.target.name]: e.target.value,\n    })\n  };\n\n  return (\n    <div>\n      <div className={classes.background}>\n        <h3>Username: {props.user.username}</h3>\n        <h3>Name: {props.user.name}</h3>\n        <hr />\n        <h3>About Me: </h3>\n        <div className={classes.display}><EditProfileBtn onClick={handleEdit} /></div>\n        {editable\n          ?\n          <div>\n            <form className={classes.background} noValidate autoComplete=\"off\">\n              <Grid container alignItems='center' justify='center' spacing={2}>\n                <Grid item xs={6} md={6}>\n                  <TextField\n                    id=\"filled-full-width\"\n                    label=\"Username\"\n                    name='username'\n                    placeholder={props.user.username}\n                    value={props.user.username}\n                    onChange={e => setUsername(e.target.value)}\n                    readOnly={readonly}\n                    fullWidth\n                    margin=\"normal\"\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    variant=\"filled\"\n                  />\n                </Grid>\n                <Grid item xs={6} md={6}>\n                  <TextField\n                    id=\"filled-full-width\"\n                    label=\"Name\"\n                    name=\"name\"\n                    value={props.user.name}\n                    placeholder={props.user.name}\n                    onChange={e => setName(e.target.value)}\n                    readOnly={readonly}\n                    fullWidth\n                    margin=\"normal\"\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    variant=\"filled\"\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <TextField\n                    id=\"filled-full-width\"\n                    label=\"Password\"\n                    name=\"password\"\n                    type=\"password\"\n                    value={props.user.password}\n                    placeholder={props.user.password}\n                    onChange={e => setPassword(e.target.value)}\n                    readOnly={readonly}\n                    fullWidth\n                    margin=\"normal\"\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    variant=\"filled\"\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <TextField\n                    id=\"filled-full-width\"\n                    label=\"About Me\"\n                    name=\"about\"\n                    value=\"\"\n                    readOnly={readonly}\n                    rows='8'\n                    placeholder=\"Tell us about yourself...\"\n                    fullWidth\n                    multiline\n                    margin=\"normal\"\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    variant=\"filled\"\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SaveProfileBtn onClick={handleSave} />\n                </Grid>\n              </Grid>\n            </form>\n          </div>\n          : null\n        }\n      </div>\n\n\n    </div >\n\n  );\n}\n\nexport default Profile\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\n\nimport island from '../../images/pngIcons/049-island.png'\nimport treasureChest from '../../images/pngIcons/046-treasureChest.png'\nimport pirate from '../../images/pngIcons/029-pirate.png'\nimport compass from '../../images/pngIcons/001-compass.png'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n      },\n      appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n      },\n      drawer: {\n        width: \"15%\",\n        flexShrink: 0,\n      },\n      drawerPaper: {\n        width: \"15%\",\n      },\n    content: {\n        width: \"100%\",\n        flexGrow: 1,\n        padding: theme.spacing(2),\n    },\n    toolbar: theme.mixins.toolbar,\n    icon: {\n        width: '24px',\n        height: '24px',\n    }\n}));\n\nconst SideBar = () => {\n    const classes = useStyles();\n\n    return (\n        <Drawer\n            className={classes.drawer}\n            variant=\"permanent\"\n            classes={{\n                paper: classes.drawerPaper,\n            }}>\n            <div className={classes.toolbar} />\n            <List>\n                {/* <ListItem button key='Home'>\n                        <ListItemIcon> <img className={classes.icon} src={island} alt=\"home\" /> </ListItemIcon>\n                        <Link to=\"/profile\"><Typography>Home</Typography></Link>\n                    </ListItem>\n                    <Divider /> */}\n                <ListItem button key='MyProfile'>\n                    <ListItemIcon><img className={classes.icon} src={island} alt=\"Profile\" /></ListItemIcon>\n                    <Link to=\"/profile\"><Typography>My Profile</Typography></Link>\n                </ListItem>\n                <Divider />\n                <ListItem button key='MyTrove'>\n                    <ListItemIcon><img className={classes.icon} src={treasureChest} alt=\"Trove\" /></ListItemIcon>\n                    <Link to=\"/trove\"><Typography>My Trove</Typography></Link>\n                </ListItem>\n                <Divider />\n                <ListItem button key='Friends'>\n                    <ListItemIcon><img className={classes.icon} src={pirate} alt='Friends' /></ListItemIcon>\n                    <Link to=\"/friends\"><Typography>My Friends</Typography></Link>\n                </ListItem>\n                <Divider />\n                <ListItem button key='Discover'>\n                    <ListItemIcon><img className={classes.icon} src={compass} alt='Discover' /></ListItemIcon>\n                    <Link to=\"/discover\"><Typography>Discover</Typography></Link>\n                </ListItem>\n            </List>\n            <Divider />\n\n        </Drawer>\n    );\n}\n\nexport default SideBar;","import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Button from '@material-ui/core/Button'\n\nconst useStyles = makeStyles(theme => ({\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor:'white',\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(3),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        width: theme.spacing(7),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 7),\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: 200,\n        },\n    },\n    \n}));\n\nconst SearchBar = (props) => {\n    const classes = useStyles();\n\n    return (\n        <div>\n            <div className={classes.search}>\n                <div className={classes.searchIcon}>\n                    <SearchIcon />\n                </div>\n                <InputBase\n                    placeholder=\"Search…\"\n                    classes={{\n                        root: classes.inputRoot,\n                        input: classes.inputInput,\n                    }}\n                    inputProps={{ 'aria-label': 'search' }}\n                    onChange = {props.onChange}\n                />\n                <Button color=\"inherit\" onClick={props.onSearch}>Search</Button>\n            </div>\n        </div>\n    )\n}\n\nexport default SearchBar;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport clsx from 'clsx';\nimport { spacing } from '@material-ui/system';\nimport SearchBar from '../SearchBar'\nimport TextField from '@material-ui/core/TextField'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n    small: {\n        width: theme.spacing(3),\n        height: theme.spacing(3),\n    },\n    large: {\n        width: theme.spacing(30),\n        height: theme.spacing(30),\n    },\n    teal: {\n        color: 'white',\n        backgroundColor: theme.palette.secondary.dark,\n    },\n    spacing: {\n        marginTop: \"-150px\",\n        marginLeft: \"55px\"\n    },\n}));\n\nexport default function AvatarImage(props) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Avatar alt={props.user.username} src=\"/static/images/avatar/1.jpg\" className={clsx(classes.large, classes.teal, classes.spacing)} />\n        </div>\n    );\n}","import React, { Fragment } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport banner from '../../images/Banners/Banner1.png'\n\nconst useStyles = makeStyles(theme => ({\n    teal: {\n        color: 'white',\n        marginTop: '90px',\n        marginRight: '15px',\n        backgroundColor: theme.palette.secondary.light,\n        height: '250px',\n        borderRadius: '10px',\n        padding: '10px',\n        overflow:'hidden',\n\n    },\n    bannerImg: {\n        height: \"250px\",\n        width: \"auto\",\n        borderRadius: \"10px\",\n        padding: \"15px\",\n        backgroundRepeat: \"repeat-x\"\n    }\n}));\n\nconst ProfileBanner = () => {\n    const classes = useStyles();\n    return (\n        <Fragment>\n            <Grid className={classes.teal} >\n                <img src={banner} className={classes.bannerImg} />\n            </Grid>\n        </Fragment>\n    )\n}\n\nexport default ProfileBanner","import React, { useState, useEffect, Fragment } from 'react';\nimport Auth from '../utils/Auth';\nimport Profile from '../components/Profile/index'\nimport Nav from '../components/Nav'\nimport SideBar from '../components/SideBar'\nimport API from '../utils/API';\nimport Avatar from '../components/Avatar'\nimport ProfileBanner from '../components/ProfileBanner'\nimport Grid from '@material-ui/core/Grid'\n\nconst ProfilePage = (props) => {\n    const [secretData, setSecretData] = useState('');\n    const [user, setUser] = useState({});\n\n    useEffect(() => {\n        // update authenticated state on logout\n        props.checkAuthenticateStatus()\n    }, [])\n\n    useEffect(() => {\n        API.dashboard(Auth.getToken())\n            .then(res => {\n                setSecretData(res.data.message)\n                setUser(res.data.user)\n            });\n    }, [])\n\n    return (\n        <Fragment>\n            <Grid container spacing={0} direction=\"row\">\n                <Grid item md={12}>\n                    <Nav />\n                </Grid>\n            </Grid>\n            <Grid container spacing={0} direction=\"row\">\n                <Grid item md={2} sm={2}>\n                    <SideBar />\n                </Grid>\n                <Grid item md={10} sm={10}>\n                    <Grid item xs={12} alignItems='center' justify='center'>\n                        <ProfileBanner />\n                        <Avatar user={user} />\n                        <Profile user={user} setUser={setUser} />\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Fragment>\n    )\n};\n\nexport default ProfilePage;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(0),\n        },\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\nconst AddItemBtn = (props) => {\n    const classes = useStyles();\n\n    return (\n        <IconButton\n            className={classes.root}\n            color='primary'\n            onClick={props.onClick}\n            size='medium'\n            id={props.id}>\n            <AddCircleIcon color='primary' fontSize='large' />\n        </IconButton>\n\n    );\n}\n\nexport default AddItemBtn\n\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport { blue } from '@material-ui/core/colors';\nimport AddItemBtn from '../AddItemBtn'\nimport Card from '@material-ui/core/Card';\nimport clsx from 'clsx';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600],\n  },\n});\n\nfunction AddTroveItemDialog(props) {\n  console.log(props)\n  const classes = useStyles();\n  const { onClose, open, onItemChange, createItem, newItem } = props;\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"add-item\" open={open}>\n      <DialogTitle id=\"add-item\">Add Item</DialogTitle>\n      <Card className={clsx(classes.alignItemsAndJustifyContent, classes.root)}>\n        <form>\n          <FormControl className={classes.formControl}>\n            <InputLabel htmlFor=\"age-native-simple\">Trove Title</InputLabel>\n            <Select\n              native\n              value={props.troveTitle}\n              onChange={props.onChange}\n              inputProps={{\n                name: 'title',\n                id: 'age-native-simple',\n              }}\n            >\n              <option value=''></option>\n              {props.trove.troves ? props.trove.troves.map((t, key) => {\n                return <option value={t.title}>{t.title}</option>\n              }) : null}\n\n            </Select>\n\n          </FormControl>\n          <div className=\"button-line\">\n            <Button type=\"submit\" label=\"Add Item\" primary=\"true\" onClick={props.addItem}>Add Item</Button>\n          </div>\n        </form>\n\n\n      </Card>\n    </Dialog>\n  );\n}\n\nAddTroveItemDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n};\n\nexport default function AddTroveItemDialogModal(props) {\n  console.log(props)\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = (e) => {\n    setOpen(true);\n    props.setItemId(props.item._id)\n    console.log(\"Add Button\", props.item._id)\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <br />\n      <AddItemBtn aria-label=\"edit\" onClick={handleClickOpen} />\n      <AddTroveItemDialog open={open} onClose={handleClose} item={props.item} setItem={props.setItem} onChange={props.onChange} troveTitle={props.troveTitle} trove={props.trove} addItem={props.addItem} />\n    </div>\n  );\n}\n\n","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport AddTroveItemDialogModal from '../AddTroveItemDialogModal';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        maxWidth: 345,\n    },\n    media: {\n        paddingTop: '56.25%', // 16:9\n        backgroundSize: 'contain'\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    avatar: {\n        backgroundColor: red[500],\n    },\n}));\nconst DiscoverItemCard = (props) => {\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.root} id={props.key}>\n            <CardHeader title={props.item.title} />\n            <img src={props.item.imagesrc} alt={props.item.title} className={classes.root} />\n            <CardContent>\n                <Typography variant=\"h4\" color=\"textSecondary\" component=\"h4\">\n                    <b>Url:</b> <Link to={props.item.url}>{props.item.url}</Link>\n                </Typography>\n                <br />\n                <Typography variant=\"h4\" color=\"textSecondary\" component=\"h4\">\n                    <b>Description:</b> {props.item.description}\n                </Typography>\n                <br />\n                <Typography variant=\"h4\" color=\"textSecondary\" component=\"h4\">\n                    <b>Price:</b> {props.item.price}\n                </Typography>\n            </CardContent>\n            <CardActions disableSpacing>\n                <AddTroveItemDialogModal item={props.item} setItemId={props.setItemId} onChange={props.onChange} troveTitle={props.troveTitle} trove={props.trove} addItem={props.addItem}/>\n            </CardActions>\n        </Card >\n    );\n}\nexport default DiscoverItemCard;","import React, { Fragment, useState, useEffect } from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Nav from '../components/Nav'\nimport SideBar from '../components/SideBar'\nimport Avatar from '../components/Avatar'\nimport ProfileBanner from '../components/ProfileBanner'\nimport DiscoverItemCard from '../components/DiscoverItemCard'\nimport API from '../utils/API';\nimport Auth from '../utils/Auth';\n\nconst DiscoverPage = (props) => {\n\n    const [user, setUser] = useState({});\n    const [items, setItems] = useState([]);\n    const [trove, setTrove] = useState({});\n    const [troveTitle, setTroveTitle] = useState('');\n    const [itemId, setItemId] = useState({});\n\n    console.log(user)\n    console.log(trove)\n\n    useEffect(() => {\n        API.dashboard(Auth.getToken())\n            .then(res => {\n                setUser(res.data.user)\n                API.getTrove(res.data.user._id, Auth.getToken())\n                    .then((trove) => {\n                        console.log(trove.data)\n                        setTrove(trove.data)\n                    })\n            });\n    }, [])\n\n    useEffect(() => {\n        API.getItems()\n            .then(res => {\n                console.log(res.data)\n                setItems(res.data)\n            });\n    }, [])\n\n    const onChange = (e) => {\n        setTroveTitle(e.target.value)\n        console.log(e.target.value)\n    };\n\n    const addItem = () => {\n        console.log(troveTitle, itemId)\n        API.addTroveItem(troveTitle, itemId).then(res => {\n            console.log(res.data)\n        })\n    }\n\n    return (\n        <Fragment>\n            <Grid container spacing={0} direction=\"row\">\n                <Grid item md={12}>\n                    <Nav />\n                </Grid>\n            </Grid>\n            <Grid container spacing={0} direction=\"row\">\n                <Grid item md={2} sm={2}>\n                    <SideBar />\n                </Grid>\n                <Grid item md={10} sm={10}>\n                    <ProfileBanner />\n                    <Avatar user={user} />\n                    <Grid container direction='row'>\n                        {items\n                            ? items.map((item, key) => {\n                                return (\n                                    <Grid item xs={4} md={3} key={key}>\n                                        <DiscoverItemCard item={item} setItemId={setItemId} onChange={onChange} troveTitle={troveTitle} trove={trove} addItem={addItem} />\n                                    </Grid>)\n                            }) : <Grid container alignItems='center' justify='center' spacing={2}>\n                                <Grid item>\n                                    <h3>No Items</h3>\n                                </Grid>\n                            </Grid>}\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Fragment>\n\n    )\n}\n\nexport default DiscoverPage","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport API from '../../utils/API'\nimport Auth from '../../utils/Auth'\nimport SearchBar from '../SearchBar'\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport { blue } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600],\n  },\n});\n\nfunction NewFriendsDialog(props) {\n  console.log(props)\n  const classes = useStyles();\n\n  const { onClose, open, selectedValue } = props;\n  const [result, setResult] = useState([]);\n  const [search, setSearch] = useState();\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const onChange = (e) => setSearch(\n    e.target.value\n  );\n\n  const onSearch = () => {\n    API.findFriends(search, Auth.getToken()).then(res => {\n      setResult(res.data)\n    })\n  }\n\n  const addFriend = (e) => {\n    console.log(Auth.getToken())\n    console.log(props.user)\n    var data={id: props.user._id, friend: e.target.parentNode.id}\n    API.addFriend(data, Auth.getToken()).then((res) =>{\n      props.setFriends(res.data.friends)\n    })\n\n  }\n\n\n  const handleListItemClick = value => {\n    onClose(value);\n  };\n\n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n\n      <DialogTitle id=\"simple-dialog-title\">Find New Friends</DialogTitle>\n      {/* <SearchBar className={classes.search} onChange={onChange} onSearch={onSearch} />  */}\n\n      <SearchBar className={classes.search} onChange={onChange} onSearch={onSearch} />\n\n      {result ? result.map((person, key) => {\n        console.log(person)\n        return <div><li key={person._id}>{person.name}<Button id={person._id} variant=\"outlined\" color=\"primary\" onClick={addFriend}>Add Friend</Button></li></div>\n      }) : console.log(\"error\")}\n\n    </Dialog>\n  );\n}\n\nexport default function NewFriendsDialogModal(props) {\n  console.log(props)\n  const [open, setOpen] = useState(false);\n\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = value => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Find Friends\n      </Button>\n      <NewFriendsDialog open={open} onClose={handleClose} setFriends={props.setFriends} user={props.user}/>\n    </div>\n  );\n}\n\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport NoFriendsImg from \"../../images/Logos/NoFriendsDefault.png\";\n\nconst useStyles = makeStyles(theme => ({\n    image: {\n        width: '950px',\n        height: '700px'\n    },\n}));\n\nconst NoFriends = () => {\n    const classes = useStyles();\n    return(\n        <img className={classes.image} src={NoFriendsImg} alt=\"No Friends\"/>\n    )\n \n}\n\nexport default NoFriends;","import React, { useState, Fragment } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport theme from '../../utils/themeUtil';\nimport NoFriends from '../NoFriends/index';\nimport NewFriendsDialogModal from '../NewFriendsDialogModal';\nimport API from '../../utils/API';\nimport Auth from '../../utils/Auth';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 600,\n  },\n\n  HeaderDiv: {\n    backgroundColor: theme.palette.secondary.light,\n    fontSize: '20px',\n    textAlign: 'center',\n    padding: '10px',\n    borderRadius: '5px',\n    marginBottom: '15px',\n  },\n\n  BodyDiv: {\n    fontSize: '20px',\n    textAlign: 'center',\n    padding: '10px',\n    borderRadius: '5px',\n    marginBottom: '15px',\n  },\n\n  layout: {\n    marginTop: '20px',\n    marginBottom: '50px',\n    marginRight: '50px',\n  },\n  avatar: {\n    height: '5px',\n    width: '5px',\n  },\n  noFriendsStyle: {\n    margin: '0 auto'\n  },\n  modalButton: {\n    display: 'flex',\n    flexDirection: 'row-reverse'\n  }\n\n});\n\n\nconst FriendTable = (props) => {\n  const classes = useStyles();\n  const [search, setSearch] = useState();\n\n  console.log(props.friends)\n\n\n  const onChange = (e) => setSearch(\n    e.target.value\n  );\n\n  const onSearch = () => {\n    API.findFriends(search, Auth.getToken()).then(res => {\n      console.log(res.data)\n    })\n  }\n\n  return (\n    <Fragment>\n      <Grid className={classes.layout}>\n        <Paper elevation={1} className={classes.HeaderDiv}>\n          <div className={classes.span}>\n            <Grid container spacing={3}>\n              <Grid item xs>\n\n              </Grid>\n              <Grid item xs>\n                Your Friends\n            </Grid>\n              <Grid item xs className={classes.modalButton}>\n                <NewFriendsDialogModal onChange={onChange} onSearch={onSearch} searchResult={props.searchResult} setFriends={props.setFriends} user={props.user} />\n              </Grid>\n            </Grid>\n          </div>\n        </Paper >\n      </Grid >\n      <Grid className={classes.layout}>\n        {props.friends.length\n          ? (\n            props.friends.map((friend) => {\n              return (\n                <TableContainer component={Paper}>\n                  <Table className={classes.table} aria-label=\"simple table\">\n                    <TableBody>\n                      <TableRow key={friend.name}>\n                        <TableCell align=\"center\">Avatar</TableCell>\n                        <TableCell align=\"center\">{friend.username}</TableCell>\n                        <TableCell align=\"center\">{friend.name}</TableCell>\n                        <TableCell align=\"center\">Trove</TableCell>\n                        <TableCell align=\"center\">Delete</TableCell>\n                      </TableRow>\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              )\n\n            })\n          )\n          : <Paper elevation={1} className={classes.BodyDiv}>\n            <NoFriends />\n          </Paper>\n        }\n      </Grid >\n    </Fragment>\n  );\n}\nexport default FriendTable;","import React, { useState, useEffect, Fragment } from 'react'\nimport Nav from '../components/Nav'\nimport SideBar from '../components/SideBar'\nimport NewFriendsDialogModal from '../components/NewFriendsDialogModal'\nimport FriendTable from '../components/FriendTable'\nimport API from '../utils/API'\nimport Auth from '../utils/Auth'\nimport Grid from '@material-ui/core/Grid'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles({\n    layout: {\n        marginTop: '75px',\n    },\n})\n\nconst MyFriendsPage = () => {\n    const classes = useStyles();\n    const [search, setSearch] = useState();\n    const [user, setUser] = useState();\n    const [friends, setFriends] = useState([]);\n    const [searchResult, setSearchResult] = useState();\n\n    console.log(search)\n    console.log(user)\n    console.log(friends)\n\n    useEffect(() => {\n        API.dashboard(Auth.getToken())\n            .then(res => {\n                setUser(res.data.user)\n                API.getFriends(res.data.user._id, Auth.getToken()).then(friend => {\n                    // setFriends(res.data.user.friends)\n                    console.log(friend.data.friends)\n                    setFriends(friend.data.friends)\n\n                });\n            })\n    }, [])\n\n\n    return (\n        <Fragment>\n            <Grid container spacing={0} direction=\"row\">\n                <Grid item md={12}>\n                    <Nav />\n                </Grid>\n            </Grid>\n            <Grid container spacing={0} direction=\"row\">\n                <Grid item md={2} sm={2}>\n                    <SideBar />\n                </Grid>\n                <Grid item md={10} sm={10} className={classes.layout}>\n                    <FriendTable friends={friends} setFriends={setFriends} user={user} searchResult={searchResult} setSearchResult={setSearchResult} />\n                </Grid>\n            </Grid>\n        </Fragment>\n    )\n}\n\nexport default MyFriendsPage","import React from 'react';\nimport { Card } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx'\n\n\n\nconst useStyles = makeStyles(theme => ({\n\n  alignItemsAndJustifyContent: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    border: '0',\n    boxShadow: 'none'\n  },\n  root: {\n    backgroundColor: \"white\", \n    color: 'white'\n  }\n}));\n\nconst EditTroveForm = ({Edit, onChange, trove, newTrove}) => {\n  const classes = useStyles();\n\n  return (\n  \n  <Card className={clsx(classes.alignItemsAndJustifyContent, classes.root)}>\n    <form onSubmit={Edit}>\n      <h2 className=\"card-heading\">Login</h2>\n\n      <div className=\"field-line\">\n        <TextField\n          placeholder=\"Title\"\n          name=\"title\"\n          onChange={onChange}\n          error={trove.title === \"\"}\n          value={newTrove.title}\n        />\n      </div>\n\n      <div className=\"field-line\">\n        <TextField\n          placeholder=\"Description\"\n          name=\"description\"\n          onChange={onChange}\n          error={trove.description === \"\"}\n          value={newTrove.description}\n        />\n      </div>\n\n      <div className=\"field-line\">\n        <TextField\n          placeholder=\"Image URL\"\n          name=\"imgurl\"\n          onChange={onChange}\n          error={trove.imgurl === \"\"}\n          value={newTrove.imgurl}\n        />\n      </div>\n\n      <div className=\"button-line\">\n        <Button type=\"submit\" label=\"Log in\" primary=\"true\" >Save</Button>\n      </div>\n    </form>\n  </Card>\n)};\n\nexport default EditTroveForm;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(0),\n        },\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\nconst EditTroveBtn = (props) => {\n    const classes = useStyles();\n\n    return (\n        <IconButton\n            className={classes.root}\n            color='primary'\n            onClick={props.onClick}\n            size='medium'\n            id={props.id}>\n            <EditIcon color='primary' fontSize='large'/>\n        </IconButton>\n    );\n}\n\nexport default EditTroveBtn\n\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport EditTroveForm from '../EditTroveForm'\nimport EditTroveBtn from '../EditTroveBtn';\n\nfunction EditTroveDialog(props) {\n  const { onClose, selectedValue, open, onChange, Edit, trove } = props;\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"edit-trove\" open={open} onChange={onChange} trove={trove}>\n      <DialogTitle id=\"edit-trove\">Edit Trove Details</DialogTitle>\n      <EditTroveForm \n        onChange ={onChange}\n        Edit = {Edit}\n        trove = {trove}\n        newTrove={props.newTrove}\n      />\n    </Dialog>\n  );\n}\n\nEditTroveDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n};\n\nexport default function EditTroveDialogModal(props) {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = (e) => {\n    setOpen(true);\n    props.setTroveId(props.trove._id)\n    console.log(props.trove._id)\n  };\n\n  const handleClose = value => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <EditTroveBtn aria-label=\"edit\" id={props.trove._id} onClick={handleClickOpen} />\n      <EditTroveDialog open={open} onClose={handleClose} trove={props.trove} onChange={props.onChange} Edit={props.Edit} newTrove={props.newTrove}/>\n    </div>\n  );\n}\n\n","import React from 'react';\nimport { Card } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx'\n\n\n\nconst useStyles = makeStyles(theme => ({\n\n  alignItemsAndJustifyContent: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    border: '0',\n    boxShadow: 'none',\n    margin: '15px'\n  },\n  root: {\n    backgroundColor: \"white\", \n    color: 'white'\n  }\n}));\n\nconst ItemForm = ({createItem, onItemChange, newItem}) => {\n  const classes = useStyles();\n\n  return (\n  \n  <Card className={clsx(classes.alignItemsAndJustifyContent, classes.root)}>\n    <form onSubmit={createItem}>\n      <h2 className=\"card-heading\">Login</h2>\n\n      <div className=\"field-line\">\n        <TextField\n          placeholder=\"Product URL\"\n          name=\"url\"\n          onChange={onItemChange}\n          error={newItem.url === \"\"}\n          value={newItem.url}\n        />\n      </div>\n\n      <div className=\"field-line\">\n        <TextField\n          placeholder=\"Title\"\n          name=\"title\"\n          onChange={onItemChange}\n          error={newItem.title === \"\"}\n          value={newItem.title}\n        />\n      </div>\n\n      <div className=\"field-line\">\n        <TextField\n          placeholder=\"Price\"\n          name=\"price\"\n          onChange={onItemChange}\n          error={newItem.price === \"\"}\n          value={newItem.price}\n        />\n      </div>\n\n      <div className=\"field-line\">\n        <TextField\n          placeholder=\"Description\"\n          name=\"description\"\n          onChange={onItemChange}\n          error={newItem.description === \"\"}\n          value={newItem.description}\n        />\n      </div>\n\n      <div className=\"field-line\">\n        <TextField\n          placeholder=\"Image URL\"\n          name=\"imagesrc\"\n          onChange={onItemChange}\n          error={newItem.imagesrc === \"\"}\n          value={newItem.imagesrc}\n        />\n      </div>\n\n      <div className=\"button-line\">\n        <Button type=\"submit\" label=\"Add Item\" primary=\"true\" >Submit</Button>\n      </div>\n    </form>\n  </Card>\n)};\n\nexport default ItemForm;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport { blue } from '@material-ui/core/colors';\nimport AddItemBtn from '../AddItemBtn'\nimport ItemForm from '../ItemForm'\nimport Card from '@material-ui/core/Card';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600],\n  },\n});\n\nfunction AddItemDialog(props) {\n  console.log(props)\n  const classes = useStyles();\n  const { onClose, open, onItemChange, createItem, newItem } = props;\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n      <DialogTitle id=\"simple-dialog-title\">Add Item</DialogTitle>\n      <Card className={clsx(classes.alignItemsAndJustifyContent, classes.root)}>\n        <ItemForm\n          onItemChange={onItemChange}\n          createItem={createItem}\n          newItem={newItem}\n        />\n      </Card>\n    </Dialog>\n  );\n}\n\nAddItemDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n};\n\nexport default function AddItemDialogModal(props) {\n  console.log(props)\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = (e) => {\n    setOpen(true);\n    props.setTroveId(props.trove._id)\n    console.log(\"Add Button\", props.trove._id)\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <AddItemBtn aria-label=\"edit\" id={props.trove._id} onClick={handleClickOpen} />\n      <AddItemDialog open={open} onClose={handleClose} item={props.item} setItem={props.setItem} newItem={props.newItem} setNewItem={props.setNewItem} onItemChange={props.onItemChange} createItem={props.createItem}/>\n    </div>\n  );\n}\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(0),\n        },\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\nconst DeleteBtn = (props) => {\n    const classes = useStyles();\n\n    return (\n        <IconButton\n            className={classes.root}\n            color='primary'\n            onClick={props.onClick}\n            size='medium'\n            id={props.id}>\n            <DeleteIcon color='primary' fontSize='large'/>\n        </IconButton>\n    );\n}\n\nexport default DeleteBtn\n\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DeleteBtn from '../DeleteBtn'\nimport Button from '@material-ui/core/Button'\n\nfunction DeleteTroveDialog(props) {\n  console.log(props)\n  const { onClose, selectedValue, open, trove } = props;\n\n  const handleClose = () => {\n    onClose(selectedValue);\n    \n  };\n\n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"edit-trove\" open={open} trove={trove}>\n      <DialogTitle id=\"edit-trove\">Delete Trove?</DialogTitle>\n      <Button type='submit' variant='outlined' onClick={props.onDelete}>Delete</Button>\n    </Dialog>\n  );\n}\n\nDeleteTroveDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n};\n\nexport default function DeleteTroveDialogModal(props) {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = (e) => {\n    setOpen(true);\n    console.log(\"Delete id\", props.trove._id)\n    props.setTroveId(props.trove._id)\n  };\n\n  const handleClose = value => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <DeleteBtn aria-label=\"edit\" id={props.trove._id} onClick={handleClickOpen} />\n      <DeleteTroveDialog open={open} onClose={handleClose} trove={props.trove} onChange={props.onChange} onDelete={props.onDelete} newTrove={props.newTrove}/>\n    </div>\n  );\n}\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Visibility from '@material-ui/icons/Visibility';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(0),\n        },\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\nconst ShowItemsBtn = (props) => {\n    const classes = useStyles();\n\n    return (\n        <IconButton\n            className={classes.root}\n            color='primary'\n            onClick={props.onClick}\n            size='medium'\n            id={props.id}>\n\n            <Visibility color='primary' fontSize='large' />\n        </IconButton>\n\n    );\n}\n\nexport default ShowItemsBtn\n\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DeleteBtn from '../DeleteBtn'\nimport Button from '@material-ui/core/Button'\n\nfunction DeleteItemDialog(props) {\n  console.log(props)\n  const { onClose, selectedValue, open, trove } = props;\n\n  const handleClose = () => {\n    onClose(selectedValue);\n    \n  };\n\n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"edit-trove\" open={open} trove={trove}>\n      <DialogTitle id=\"edit-trove\">Delete Item?</DialogTitle>\n      <Button type='submit' variant='outlined' onClick={props.onItemDelete}>Delete</Button>\n    </Dialog>\n  );\n}\n\nDeleteItemDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n};\n\nexport default function DeleteTroveDialogModal(props) {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = (e) => {\n    setOpen(true);\n    console.log(\"Delete id\", props.item._id)\n    props.setItemId(props.item._id)\n  };\n\n  const handleClose = value => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <DeleteBtn aria-label=\"edit\" id={props.item._id} onClick={handleClickOpen} />\n      <DeleteItemDialog open={open} onClose={handleClose} item={props.item} onItemDelete={props.onItemDelete}/>\n    </div>\n  );\n}\n\n","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport DeleteItemDialogModal from '../DeleteItemDialogModal'\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        maxWidth: 345,\n    },\n    media: {\n        paddingTop: '56.25%', // 16:9\n        backgroundSize: 'contain'\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    avatar: {\n        backgroundColor: red[500],\n    },\n}));\nconst ItemCard = (props) => {\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.root} id={props.key}>\n            <CardHeader title={props.item.title} />\n            <img src={props.item.imagesrc} alt={props.item.title} className={classes.root} />\n            <CardContent>\n                <Typography variant=\"h4\" color=\"textSecondary\" component=\"h4\">\n                    <b>Url:</b> <Link to={props.item.url}>{props.item.url}</Link>\n                </Typography>\n                <br />\n                <Typography variant=\"h4\" color=\"textSecondary\" component=\"h4\">\n                    <b>Description:</b> {props.item.description}\n                </Typography>\n                <br />\n                <Typography variant=\"h4\" color=\"textSecondary\" component=\"h4\">\n                    <b>Price:</b> {props.item.price}\n                </Typography>\n            </CardContent>\n            <CardActions disableSpacing>\n                <DeleteItemDialogModal setItemId={props.setItemId} item={props.item} onItemDelete={props.onItemDelete}/>\n            </CardActions>\n        </Card >\n    );\n}\nexport default ItemCard;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport { blue } from '@material-ui/core/colors';\nimport ShowItemsBtn from '../ShowItemsBtn'\nimport Grid from '@material-ui/core/Grid'\nimport ItemCard from '../ItemCard'\n\nconst useStyles = makeStyles({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600],\n  },\n});\n\nfunction ItemDialog(props) {\n  console.log(props)\n  const classes = useStyles();\n  const { onClose, open } = props;\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n      <DialogTitle id=\"simple-dialog-title\">Trove Items</DialogTitle>\n      {props.trove.items ? props.trove.items.map((item, key) => {\n        return (\n          <Grid item xs={12} md={12} key={key}>\n            <ItemCard item={item} key={key} setItemId={props.setItemId} onItemDelete={props.onItemDelete}/>\n          </Grid>)\n      }) : null}\n    </Dialog>\n  );\n}\n\nItemDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n};\n\nexport default function AddItemDialogModal(props) {\n  console.log(props)\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = (e) => {\n    setOpen(true);\n    props.setTroveId(props.trove._id)\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <ShowItemsBtn aria-label=\"edit\" id={props.trove._id} onClick={handleClickOpen} />\n      <ItemDialog open={open} onClose={handleClose} item={props.item} trove={props.trove} setItemId={props.setItemId} onItemDelete={props.onItemDelete} />\n    </div>\n  );\n}\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport EditTroveDialogModal from '../EditTroveDialogModal';\nimport AddItemDialogModal from '../AddItemDialogModal'\nimport DeleteTroveDialogModal from '../DeleteTroveDialogModal'\nimport ItemDialogModal from '../ItemDialogModal'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        maxWidth: 345,\n    },\n    media: {\n        paddingTop: '56.25%', // 16:9\n        backgroundSize: 'contain'\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    avatar: {\n        backgroundColor: red[500],\n    },\n}));\nconst TroveCard = (props) => {\n    const classes = useStyles();\n    \n    return (\n        <Card className={classes.root} id={props.trove._id}>\n            <CardHeader title={props.trove.title} >\n            </CardHeader>\n            <ItemDialogModal trove={props.trove} setTroveId={props.setTroveId} itemId={props.itemId} setItemId={props.setItemId} onItemDelete={props.onItemDelete}/>\n            <img src={props.trove.imgurl} alt={props.trove.title} className={classes.root} />\n            <CardContent>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"h4\">\n                    Description: {props.trove.description}\n                </Typography>\n            </CardContent>\n            <CardActions disableSpacing>\n                <AddItemDialogModal aria-label=\"add\" trove={props.trove} setTroveId={props.setTroveId} item={props.item} setItem={props.setItem} newItem={props.newItem} setNewItem={props.setNewItem} onItemChange={props.onItemChange} createItem={props.createItem}/>\n                <EditTroveDialogModal aria-label=\"edit\" trove={props.trove} Edit={props.Edit} setTroveId={props.setTroveId} newTrove={props.newTrove} onChange={props.onChange} />\n                <DeleteTroveDialogModal aria-label=\"delete\" trove={props.trove} onDelete={props.onDelete} setTroveId={props.setTroveId} />\n            </CardActions>\n        </Card>\n    );\n}\nexport default TroveCard;","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport NoTroveImg from \"../../images/Logos/TrovePageDefault.png\";\nimport Grid from '@material-ui/core/Grid'\n\nconst useStyles = makeStyles(theme => ({\n    image: {\n        width: '950px',\n        height: '700px'\n    },\n    bodyDiv: {\n        fontSize: '20px',\n        textAlign: 'center',\n        padding: '10px',\n        borderRadius: '5px',\n        marginBottom: '15px',\n    },\n}));\n\nconst NoTrove = () => {\n    const classes = useStyles();\n    return (\n        <Grid container alignItems='center' justify='center' spacing={2}>\n            <Grid item>\n                <Paper elevation={1} className={classes.bodyDiv}>\n                    <div>\n                        <img className={classes.image} src={NoTroveImg} alt=\"No Trove\" />\n                    </div>\n                </Paper>\n            </Grid>\n        </Grid>\n\n\n    )\n\n}\n\nexport default NoTrove;","import React from 'react';\nimport TroveCard from '../TroveCard/index';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid'\nimport NoTroveDefault from '../NoTrove'\n\nconst useStyles = makeStyles(theme => ({\n    layout: {\n        padding: \"10px\",\n        marginRight: '50px'\n    },\n    search: {\n        backgroundColor: '#FFFFFF',\n        border: '1px'\n    }\n}));\n\nconst MyTrove = (props) => {\n    const classes = useStyles();\n\n    return (\n\n        <Grid container direction=\"row\" spacing={1} className={classes.layout}>\n            {props.trove.troves\n                ? props.trove.troves.map((trove, key) => {\n                    return (\n                        <Grid item xs={4} md={3} key={key}>\n                            <TroveCard trove={trove} Edit={props.Edit} onDelete={props.onDelete} setTroveId={props.setTroveId} newTrove={props.newTrove} onChange={props.onChange} item={props.item} setItem={props.setItem} newItem={props.newItem} setNewItem={props.setNewItem} onItemChange={props.onItemChange} createItem={props.createItem} itemId={props.itemId} onItemDelete={props.onItemDelete} setItemId={props.setItemId} />\n                        </Grid>)\n                })\n                : <NoTroveDefault />\n            }\n        </Grid>\n    )\n}\n\n\n\nexport default MyTrove;\n","import React from 'react';\nimport { Card } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx'\n\n\n\nconst useStyles = makeStyles(theme => ({\n\n  alignItemsAndJustifyContent: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    border: '0',\n    boxShadow: 'none',\n    margin: '15px'\n  },\n  root: {\n    backgroundColor: \"white\", \n    color: 'white'\n  }\n}));\n\nconst TroveForm = ({onAdd, onChange, newTrove, trove}) => {\n  const classes = useStyles();\n\n  return (\n  \n  <Card className={clsx(classes.alignItemsAndJustifyContent, classes.root)}>\n    <form onSubmit={onAdd}>\n      <h2 className=\"card-heading\">Login</h2>\n\n      <div className=\"field-line\">\n        <TextField\n          placeholder=\"Title\"\n          name=\"title\"\n          onChange={onChange}\n          error={newTrove.title === \"\"}\n          value={newTrove.title}\n        />\n      </div>\n\n      <div className=\"field-line\">\n        <TextField\n          placeholder=\"Description\"\n          name=\"description\"\n          onChange={onChange}\n          error={newTrove.description === \"\"}\n          value={newTrove.description}\n        />\n      </div>\n\n      <div className=\"field-line\">\n        <TextField\n          placeholder=\"Image URL\"\n          name=\"imgurl\"\n          onChange={onChange}\n          error={newTrove.imgurl === \"\"}\n          value={newTrove.imgurl}\n        />\n      </div>\n\n      <div className=\"button-line\">\n        <Button type=\"submit\" label=\"Log in\" primary=\"true\" >Submit</Button>\n      </div>\n    </form>\n  </Card>\n)};\n\nexport default TroveForm;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport TroveForm from '../TroveForm'\n\nfunction TroveDialog(props) {\n  const { onClose, open, onChange, onAdd, newTrove } = props;\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open} onChange={onChange} onAdd={onAdd} newTrove={newTrove}>\n      <DialogTitle id=\"simple-dialog-title\">Add New Trove</DialogTitle>\n      <TroveForm \n        onChange ={onChange}\n        onAdd = {onAdd}\n        newTrove = {newTrove}\n      />\n    </Dialog>\n  );\n}\n\nTroveDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n};\n\nexport default function NewTroveDialogModal(props) {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = value => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Add Trove\n      </Button>\n      <TroveDialog open={open} onClose={handleClose} newTrove={props.newTrove} onChange={props.onChange} onAdd={props.onAdd}/>\n    </div>\n  );\n}\n\n","import React, { useState, useEffect, Fragment } from 'react';\nimport Auth from '../utils/Auth';\nimport MyTrove from '../components/MyTrove';\nimport Nav from '../components/Nav';\nimport SideBar from '../components/SideBar';\nimport API from '../utils/API';\nimport Avatar from '../components/Avatar';\nimport ProfileBanner from '../components/ProfileBanner';\nimport NewTroveDialogModal from \"../components/NewTroveDialogModal\";\nimport Grid from '@material-ui/core/Grid';\n\nconst TrovePage = (props) => {\n    const [user, setUser] = useState({});\n    const [trove, setTrove] = useState({});\n    const [newTrove, setNewTrove] = useState({\n        title: '',\n        description: '',\n        imgurl: ''\n    });\n    const [troveId, setTroveId] = useState();\n    const [itemId, setItemId] = useState();\n    const [item, setItem] = useState([]);\n    const [newItem, setNewItem] = useState({\n        url: '',\n        title: '',\n        price: '',\n        description: '',\n        imagesrc: '',\n    });\n\n    // console.log(user)\n    // console.log(trove.troves)\n\n    useEffect(() => {\n        // update authenticated state on logout\n        props.checkAuthenticateStatus()\n    }, [])\n\n    useEffect(() => {\n        API.dashboard(Auth.getToken())\n            .then(res => {\n                setUser(res.data.user)\n                console.log(res.data.user._id)\n                API.getTrove(res.data.user._id, Auth.getToken())\n                    .then((trove) => {\n                        console.log(trove.data)\n                        setTrove(trove.data)\n                    })\n            });\n    }, [])\n\n    const onChange = (e) => {\n        setNewTrove({\n            ...newTrove,\n            [e.target.name]: e.target.value,\n        })\n    };\n\n    const onItemChange = (e) => {\n        setNewItem({\n            ...newItem,\n            [e.target.name]: e.target.value,\n        })\n    };\n\n    const onAdd = () => {\n        API.addTrove(user._id, newTrove).then(res => {\n            console.log(res)\n        })\n    }\n\n    const Edit = () => {\n        console.log(troveId)\n        API.editTrove(troveId, newTrove).then(res => {\n            console.log(res)\n        })\n    }\n\n    const onDelete = () => {\n        console.log(troveId)\n        API.deleteTrove(troveId, user._id).then(res => {\n            API.getTrove(user._id, Auth.getToken())\n                    .then((trove) => {\n                        console.log(trove.data)\n                        setTrove(trove.data)\n                    })\n        })\n    }\n\n    const onItemDelete = () => {\n        console.log(troveId, itemId)\n        API.removeItem(troveId, itemId).then(res => {\n            API.getTrove(user._id, Auth.getToken())\n                    .then((trove) => {\n                        console.log(trove.data)\n                        setTrove(trove.data)\n                    })\n        })\n    }\n\n    const createItem = () => {\n        API.addItem(troveId, newItem).then(res => {\n            console.log(res)\n        })\n    }\n\n    return (\n        <Fragment>\n            <Grid container spacing={0} direction=\"row\">\n                <Grid item md={12}>\n                    <Nav />\n                </Grid>\n            </Grid>\n            <Grid container spacing={0} direction=\"row\">\n                <Grid item md={2} sm={2}>\n                    <SideBar />\n                </Grid>\n                <Grid item md={10} sm={10}>\n                    <ProfileBanner />\n                    <Avatar user={user} />\n                    <NewTroveDialogModal onChange={onChange} onAdd={onAdd} newTrove={newTrove} />\n                    <MyTrove trove={trove} Edit={Edit} setTroveId={setTroveId} newTrove={newTrove} onChange={onChange} onDelete={onDelete} item={item} setItem={setItem} newItem={newItem} setNewItem={setNewItem} onItemChange={onItemChange} createItem={createItem} itemId={itemId} setItemId={setItemId} onItemDelete={onItemDelete}/>\n\n                </Grid>\n            </Grid>\n        </Fragment>\n\n    )\n\n}\n\nexport default TrovePage;\n","import React, { useState, useEffect } from \"react\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport theme from './utils/themeUtil';\nimport LogoutFunction from './pages/LogoutFunction';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\n\n// import {\n//   PropsRoute,\n//   LoggedOutRoute\n// } from './components/Routes';\n\nimport LoginPage from './pages/LogInPage';\nimport LandingPage from './pages/LandingPage';\nimport SignupPage from './pages/SignupPage.js';\nimport ProfilePage from './pages/ProfilePage';\nimport DiscoverPage from './pages/DiscoverPage';\nimport FriendsPage from './pages/MyFriendsPage';\nimport TrovePage from './pages/TrovePage';\n\nimport Auth from './utils/Auth';\n\n// remove tap delay, essential for MaterialUI to work properly\n\nconst App = () => {\n\n  const [Authenticate, setAuthenticate] = useState({\n    authenticated: false\n  })\n  console.log(Authenticate)\n  useEffect(() => {\n    // check if user is logged in on refresh\n    toggleAuthenticateStatus()\n  }, []);\n\n  useEffect(() => {\n    return () => {\n      Auth.deauthenticateUser()\n    }\n  }, []);\n\n  const toggleAuthenticateStatus = () => {\n    // check authenticated status and toggle state based on that\n    setAuthenticate({ authenticated: Auth.isUserAuthenticated() })\n\n  }\n\n  return (\n    <Router>\n      <ThemeProvider theme={theme}>\n        <Switch>\n          <Route exact path='/' render={(props) => <LandingPage {...props} checkAuthenticateStatus={toggleAuthenticateStatus} />} />\n          <Route exact path='/login' render={(props) => <LoginPage {...props} checkAuthenticateStatus={toggleAuthenticateStatus} />} />\n          <Route exact path='/signup' component={SignupPage} />\n          <Route exact path='/profile' render={(props) => <ProfilePage {...props} checkAuthenticateStatus={toggleAuthenticateStatus} />} />\n          <Route exact path='/trove' render={(props) => <TrovePage {...props} checkAuthenticateStatus={toggleAuthenticateStatus} />} />\n          <Route exact path='/discover' component={DiscoverPage} />\n          <Route exact path='/friends' component={FriendsPage} />\n          <Route path=\"/logout\" render={(props) => <LogoutFunction {...props} checkAuthenticateStatus={toggleAuthenticateStatus} />} />\n        </Switch>\n      </ThemeProvider>\n    </Router >\n  )\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDom.render(<App />, document.getElementById('root'));\nregisterServiceWorker();","module.exports = __webpack_public_path__ + \"static/media/TroveLogo.c3249b80.png\";"],"sourceRoot":""}